{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactList/ListElement/ListElement.module.css","redux/actions.js","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ListElement/ListElement.jsx","components/ContactList/ContactList.jsx","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","changeFilter","addItemRequest","addItemSuccess","addItemError","removeItemRequest","removeItemSuccess","removeItemError","axios","defaults","baseURL","getItems","state","contacts","items","getFilter","filter","getLoadingState","loading","connect","selectors","dispatch","addNewContact","newContact","name","number","item","post","then","data","catch","error","addItem","labelNameId","uuidv4","labelNumberId","inputNameProps","id","type","pattern","title","inputNumberProps","useState","setName","setNumber","handleInput","e","target","value","isNewContactValid","toLowerCase","length","alert","reset","className","s","contactForm","onSubmit","preventDefault","nameBlock","htmlFor","labelName","required","onChange","numberBlock","labelNumber","filterHandler","event","filterInput","deleteHandler","delete","deleteBtnNameAsId","onClick","isLoaderActive","contactsList","filterWord","includes","getInitialContacts","get","useEffect","wrapper","map","App","itemsReducer","createReducer","_","payload","filterReducer","loadingReducer","contactsReducer","combineReducers","myMiddleware","store","next","action","console","log","configureStore","reducer","middleware","getDefaultMiddleware","concat","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1eabacf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"ContactList_loading__ubuuB\",\"wrapper\":\"ContactList_wrapper__BdHYe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__1yybK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"ListElement_delete__2EiWZ\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const getContactsRequest = createAction(\"items/getContactsRequest\");\nexport const getContactsSuccess = createAction(\"items/getContactsSuccess\");\nexport const getContactsError = createAction(\"items/getContactsError\");\n\nexport const changeFilter = createAction(\"filter/changeFilter\");\n\nexport const addItemRequest = createAction(\"items/addItemRequest\");\nexport const addItemSuccess = createAction(\"items/addItemSuccess\");\nexport const addItemError = createAction(\"items/addItemError\");\n\nexport const removeItemRequest = createAction(\"items/removeItemRequest\");\nexport const removeItemSuccess = createAction(\"items/removeItemSuccess\");\nexport const removeItemError = createAction(\"items/removeItemError\");\n\nexport const filterItemsRequest = createAction(\"items/filterItemsRequest\");\nexport const filterItemsSuccess = createAction(\"items/filterItemsSuccess\");\nexport const filterItemsError = createAction(\"items/filterItemsError\");\n","import axios from \"axios\";\nimport {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addItemRequest,\n  addItemSuccess,\n  addItemError,\n  removeItemRequest,\n  removeItemSuccess,\n  removeItemError,\n} from \"./actions\";\n\naxios.defaults.baseURL = \"http://localhost:3333\";\n\nexport const getContacts = () => (dispatch) => {\n  dispatch(getContactsRequest());\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(getContactsSuccess(data)))\n    .catch((error) => dispatch(getContactsError(error)));\n};\n\nexport const addItem =\n  ({ name, number }) =>\n  (dispatch) => {\n    const item = {\n      name,\n      number,\n    };\n\n    dispatch(addItemRequest());\n\n    axios\n      .post(\"/contacts/\", item)\n      .then(({ data }) => dispatch(addItemSuccess(data)))\n      .catch((error) => {\n        dispatch(addItemError(error));\n      });\n  };\n\nexport const removeItem = (id) => (dispatch) => {\n  dispatch(removeItemRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(removeItemSuccess(id)))\n    .catch((error) => {\n      dispatch(removeItemError(error));\n    });\n};\n","/* ---- selectors for mapStateToProps only ! ---- */\n\nexport const getItems = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getLoadingState = (state) => state.contacts.loading;\n","import { v4 as uuidv4 } from 'uuid';\nimport '../../App';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../redux/operations';\nimport * as selectors from '../../redux/selectors';\n\nconst ContactForm = ({ items, addNewContact }) => {\n  const labelNameId = uuidv4();\n  const labelNumberId = uuidv4();\n\n  const inputNameProps = {\n    id: labelNameId,\n    type: 'text',\n    name: 'name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  };\n\n  const inputNumberProps = {\n    id: labelNumberId,\n    type: 'tel',\n    name: 'number',\n    pattern:\n      '\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}',\n    title:\n      'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +',\n  };\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInput = e => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    isNewContactValid({ id: uuidv4() });\n    reset();\n  };\n\n  const isNewContactValid = ({ id }) => {\n    const matchedContactsList = items.filter(item => {\n      return item.name.toLowerCase() === name.toLowerCase();\n    });\n    if (matchedContactsList.length !== 0) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      addNewContact({ id, name, number });\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.contactForm} onSubmit={handleFormSubmit}>\n      <div className={s.nameBlock}>\n        <label htmlFor={labelNameId} className={s.labelName}>\n          Name\n        </label>\n        <input\n          value={name}\n          required\n          {...inputNameProps}\n          onChange={handleInput}\n        />\n      </div>\n      <div className={s.numberBlock}>\n        <label htmlFor={labelNumberId} className={s.labelNumber}>\n          Number\n        </label>\n\n        <input\n          value={number}\n          required\n          {...inputNumberProps}\n          onChange={handleInput}\n        />\n      </div>\n      <button type=\"submit\">Add contact </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  items: PropTypes.array.isRequired,\n  addNewContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n    items: selectors.getItems(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addNewContact: newContact => dispatch(addItem(newContact)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/actions';\nimport * as selectors from '../../redux/selectors';\n\nconst Filter = ({ value, filterHandler }) => {\n  return (\n    <div>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        value={value}\n        onChange={filterHandler}\n      ></input>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    value: selectors.getFilter(state),\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    filterHandler: event => dispatch(changeFilter(event.target.value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import PropTypes from 'prop-types';\nimport s from './ListElement.module.css';\nimport { connect } from 'react-redux';\nimport { removeItem } from '../../../redux/operations';\n\nconst ListElement = ({ name, number, deleteBtnNameAsId, deleteHandler }) => {\n  return (\n    <li>\n      {name}: {number}\n      <button\n        className={s.delete}\n        type=\"button\"\n        name={deleteBtnNameAsId}\n        onClick={deleteHandler}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nListElement.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteBtnNameAsId: PropTypes.string.isRequired,\n  deleteHandler: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteHandler: event => dispatch(removeItem(event.target.name)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ListElement);","import ListElement from './ListElement';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { getContacts } from '../../redux/operations';\nimport * as selectors from '../../redux/selectors';\nimport { useEffect } from 'react';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contactsList, getInitialContacts, isLoaderActive }) => {\n  useEffect(() => {\n    getInitialContacts();\n  }, []);\n\n  return (\n    <ul className={s.wrapper}>\n      {isLoaderActive && <h2 className={s.loading}>Loading...</h2>}\n      {contactsList.map(({ id, name, number }) => {\n        return (\n          <ListElement\n            key={id}\n            name={name}\n            number={number}\n            deleteBtnNameAsId={id}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contactsList: PropTypes.array.isRequired,\n};\n\nconst filteredContactList = function (contacts, filterWord) {\n  let result = [];\n  result = contacts.filter(item => {\n    return item.name.toLowerCase().includes(filterWord.toLowerCase());\n  });\n  return result;\n};\n\nconst mapStateToProps = state => {\n  return {\n    isLoaderActive: selectors.getLoadingState(state),\n    contactsList: filteredContactList(\n      selectors.getItems(state),\n      selectors.getFilter(state),\n    ),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getInitialContacts: () => dispatch(getContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addItemRequest,\n  addItemSuccess,\n  addItemError,\n  changeFilter,\n  removeItemRequest,\n  removeItemSuccess,\n  removeItemError,\n} from \"./actions\";\n\nconst itemsReducer = createReducer([], {\n  [getContactsSuccess]: (_, { payload }) => payload,\n\n  [addItemSuccess]: (state, { payload }) => [...state, payload],\n\n  [removeItemSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loadingReducer = createReducer(false, {\n  [getContactsRequest]: () => true,\n  [getContactsSuccess]: () => false,\n  [getContactsError]: () => false,\n\n  [addItemRequest]: () => true,\n  [addItemSuccess]: () => false,\n  [addItemError]: () => false,\n\n  [removeItemRequest]: () => true,\n  [removeItemSuccess]: () => false,\n  [removeItemError]: () => false,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading: loadingReducer,\n});\n\nexport default contactsReducer;\n","//---------redux-------------\n//import { createStore } from 'redux';\n//import rootReducer from './reducers';\n//import { composeWithDevTools } from 'redux-devtools-extension';\n//---------------------------\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./reducers\";\nimport logger from \"redux-logger\";\n\nconst myMiddleware = (store) => (next) => (action) => {\n  console.log(\"my MiddleWare - for testing only \");\n  next(action);\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(myMiddleware).concat(logger),\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__32zVb\",\"labelName\":\"ContactForm_labelName__2nXPH\",\"labelNumber\":\"ContactForm_labelNumber__17_oC\",\"nameBlock\":\"ContactForm_nameBlock__1grvn\",\"numberBlock\":\"ContactForm_numberBlock__2_GYt\"};"],"sourceRoot":""}